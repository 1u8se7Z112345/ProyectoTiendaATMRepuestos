@page "/carrito"

@inject ICarritoProxy CarritoProxy
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IToastService ToastService

@attribute [Authorize(Roles = Constantes.RolCliente)]

<div class="row mt-4">
    <div class="col-sm-8">
        <div class="card mb-3">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-light table-bordered table-hover">
                        <thead class="table-dark">
                        <tr>
                            <th style="width: 105px"></th>
                            <th>Producto</th>
                            <th>Precio</th>
                            <th>Cantidad</th>
                            <th>Total</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @if (Lista is { Count: > 0 })
                        {
                            foreach (var item in Lista)
                            {
                                <tr>
                                    <td>
                                        <img class="card-img-top" src="@item.ProductoDto.UrlImagen"
                                             alt="@item.ProductoDto.Nombre" style="width: 100px" />
                                    </td>
                                    <td>@item.ProductoDto.Nombre</td>
                                    <td>S/ @item.Precio.ToString("N2")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-outline-dark"
                                                    @onclick="() => Disminuir(item.ProductoDto.Id)">
                                                <i class="bi bi-dash-circle"></i>
                                            </button>
                                            <input class="form-control" readonly style="width: 50px"
                                                   @bind-value="item.Cantidad" />
                                            <button type="button" class="btn btn-outline-dark"
                                                    @onclick="() => Aumentar(item.ProductoDto.Id)">
                                                <i class="bi bi-plus-circle"></i>
                                            </button>
                                        </div>
                                    </td>
                                    <td>S/ @item.Total.ToString("N2")</td>
                                    <td>
                                        <button type="button" class="btn btn-outline-danger"
                                                @onclick="() => Eliminar(item.ProductoDto.Id)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6">
                                    <div class="alert alert-warning">
                                        No hay productos en el carrito
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="card mb-3">
            <div class="card-body">
                <EditForm Model="TarjetaDto" OnValidSubmit="ProcesarPago">
                    <DataAnnotationsValidator />
                    
                    <div class="mb-2">
                        <label class="form-label">Nombre Titular</label>
                        <input type="text" class="form-control" placeholder="Mr. Smith" @bind-value="TarjetaDto.Titular"/>
                        <ValidationMessage For="() => TarjetaDto.Titular" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Numero Tarjeta</label>
                        <input type="text" class="form-control" placeholder="#### #### #### ####" @bind-value="TarjetaDto.Numero" autocomplete="off"/>
                        <ValidationMessage For="() => TarjetaDto.Numero" />
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="form-label">Vigencia</label>
                            <input type="text" class="form-control" placeholder="MM/YY" autocomplete="off" @bind-value="TarjetaDto.Vigencia"/>
                            <ValidationMessage For="() => TarjetaDto.Vigencia" />
                        </div>
                        <div class="col-sm-6">
                            <label class="form-label">CVV</label>
                            <input type="text" class="form-control" placeholder="###" autocomplete="off" @bind-value="TarjetaDto.Cvv" />
                            <ValidationMessage For="() => TarjetaDto.Cvv" />
                        </div>
                    </div>
                    <hr />
                    <div class="d-flex justify-content-between">
                        <div>Total a pagar</div>
                        <div>
                            S/
                            @if (Lista is { Count: > 0 })
                            {
                                @Lista.Sum(i => i.Total)
                            }
                            else
                            {
                                <span>0.0</span>
                            }
                        </div>
                    </div>
                    <div class="mt-2">
                        <div class="d-grid gap-1">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-bag-check-fill me-1"></i>
                                Procesar Pago
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<LoadingComponent IsLoading="IsLoading" />

@code {

    public ICollection<CarritoDto> Lista { get; set; } = default!;
    public TarjetaDto TarjetaDto { get; set; } = new();
    public bool IsLoading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Lista = await CarritoProxy.ObtenerCarrito();
    }

    private void Disminuir(int id)
    {
        var item = Lista.First(i => i.ProductoDto.Id == id);
        if (item.Cantidad - 1 > 0)
        {
            item.Cantidad--;
            item.Total = item.Cantidad * item.Precio;
        }
    }

    private void Aumentar(int id)
    {
        var item = Lista.First(i => i.ProductoDto.Id == id);
        item.Cantidad++;
        item.Total = item.Cantidad * item.Precio;
    }

    private async Task Eliminar(int idProducto)
    {
        var item = Lista.First(i => i.ProductoDto.Id == idProducto);

        Lista.Remove(item);
        await CarritoProxy.EliminarCarrito(idProducto);
    }

    private async Task ProcesarPago()
    {
        if (!Lista.Any())
        {
            ToastService.ShowWarning("No se encontraron productos");
            return;
        }

        IsLoading = true;

        var listItems = Lista
            .Select(item => new VentaDetalleDto(item.ProductoDto.Id,
                item.Cantidad,
                item.Precio,
                item.Total))
            .ToList();

        var request = new VentaDto(Lista.Sum(i => i.Total), listItems);

        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/ventas", request);
            response.EnsureSuccessStatusCode();

            await CarritoProxy.LimpiarCarrito();
            ToastService.ShowSuccess("Venta registrada con éxito");
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
        finally
        {
            IsLoading = false;
        }
    }
}
